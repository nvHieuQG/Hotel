<?php

namespace App\Services;

use App\Models\Booking;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Log;
use Carbon\Carbon;
use App\Interfaces\Services\RegistrationDocumentServiceInterface;
use Barryvdh\DomPDF\Facade\Pdf;

class RegistrationDocumentService implements RegistrationDocumentServiceInterface
{
    /**
     * T·∫°o gi·∫•y ƒëƒÉng k√Ω t·∫°m ch√∫ t·∫°m v·∫Øng cho booking
     *
     * @param Booking $booking
     * @return string|null
     */
    public function generateRegistrationDocument(Booking $booking): ?string
    {
        try {
            // X√≥a file PDF c≈© c·ªßa booking n√†y tr∆∞·ªõc
            $this->deleteOldPdfFiles($booking->booking_id);
            
            // T·∫°o n·ªôi dung HTML cho gi·∫•y ƒëƒÉng k√Ω
            $html = $this->generateRegistrationHtml($booking);
            
            // T·∫°o t√™n file PDF
            $pdfFilename = 'registration_' . $booking->booking_id . '_' . date('Y-m-d_H-i-s') . '.pdf';
            $pdfFilepath = 'registrations/' . $pdfFilename;
            $pdfPath = storage_path('app/public/' . $pdfFilepath);
            
            // T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
            Storage::disk('public')->makeDirectory('registrations');
            
            // T·∫°o file PDF th·ª±c s·ª± b·∫±ng dompdf
            $this->createPdfFromHtml($html, $pdfPath, $booking->guest_id_number);
            
            // C·∫≠p nh·∫≠t tr·∫°ng th√°i booking
            $booking->update([
                'registration_status' => 'generated',
                'registration_generated_at' => now(),
            ]);

            Log::info('Generated registration PDF for booking: ' . $booking->booking_id);

            return 'public/' . $pdfFilepath;
        } catch (\Exception $e) {
            Log::error('Error generating registration PDF: ' . $e->getMessage());
            return null;
        }
    }
    
    /**
     * T·∫°o n·ªôi dung HTML cho gi·∫•y ƒëƒÉng k√Ω
     */
    private function generateRegistrationHtml(Booking $booking): string
    {
        $checkInDate = Carbon::parse($booking->check_in_date);
        $checkOutDate = Carbon::parse($booking->check_out_date);
        $nights = $checkInDate->diffInDays($checkOutDate);
        
        $html = '<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gi·∫•y ƒëƒÉng k√Ω t·∫°m ch√∫ t·∫°m v·∫Øng</title>
    <style>
        @page { 
            size: A4; 
            margin: 2cm; 
        }
        body { 
            font-family: "DejaVu Sans", "Arial Unicode MS", "Arial", sans-serif; 
            font-size: 12pt; 
            line-height: 1.5; 
            margin: 0; 
            padding: 20px; 
        }
        .form-number {
            text-align: right;
            font-size: 10pt;
            margin-bottom: 10px;
        }
        .header { 
            text-align: center; 
            font-weight: bold; 
            font-size: 16pt; 
            margin: 20px 0; 
        }
        .title { 
            text-align: center; 
            font-weight: bold; 
            font-size: 14pt; 
            margin: 15px 0; 
        }
        .info { 
            font-weight: bold; 
            text-indent: 20px; 
            margin: 10px 0; 
        }
        .normal { 
            text-indent: 20px; 
            margin: 10px 0; 
        }
        .password-info { 
            background-color: #f0f0f0; 
            padding: 10px; 
            margin: 20px 0; 
            border: 1px solid #ccc; 
        }
        .footer { 
            text-align: center; 
            margin-top: 30px; 
            font-size: 10pt; 
            color: #666; 
        }
        .signature-section {
            margin-top: 30px;
            text-align: center;
        }
        .signature-line {
            border-top: 1px solid #000;
            width: 200px;
            display: inline-block;
            margin-top: 50px;
        }
        .table {
            width: 100%;
            border-collapse: collapse;
            margin: 10px 0;
        }
        .table th, .table td {
            border: 1px solid #000;
            padding: 5px;
            text-align: center;
            font-size: 9pt;
        }
        .table th {
            background-color: #f0f0f0;
            font-weight: bold;
        }
        .dotted-line {
            border-bottom: 1px dotted #000;
            height: 15px;
            margin: 5px 0;
        }
        .footnotes {
            margin-top: 20px;
            font-size: 10pt;
        }
        .footnote {
            margin-bottom: 5px;
            text-indent: 20px;
        }
    </style>
</head>
<body>';

        // Th√™m th√¥ng tin m·∫≠t kh·∫©u
        // $html .= '<div class="password-info">
        //     <strong>üìã Th√¥ng tin m·ªü file:</strong><br>
        //     M·∫≠t kh·∫©u: <strong>' . htmlspecialchars($booking->guest_id_number) . '</strong><br>
        //     L∆∞u √Ω: S·ª≠ d·ª•ng m·∫≠t kh·∫©u n√†y ƒë·ªÉ m·ªü file PDF
        // </div>';

        // Header ch√≠nh th·ª©c theo m·∫´u CT01
        $html .= '<div class="form-number">M·∫´u CT01 ban h√†nh theo TT s·ªë 56/2021/TT-BCA ng√†y 15/5/2021</div>';
        $html .= '<div class="header">C·ªòNG H√íA X√É H·ªòI CH·ª¶ NGHƒ®A VI·ªÜT NAM</div>';
        $html .= '<div class="header">ƒê·ªôc l·∫≠p ‚Äì T·ª± do ‚Äì H·∫°nh ph√∫c</div>';
        $html .= '<div class="title">T·ªú KHAI THAY ƒê·ªîI TH√îNG TIN C∆Ø TR√ö</div>';

        // K√≠nh g·ª≠i
        $html .= '<div class="info">K√≠nh g·ª≠i(1):</div>';
        $html .= '<div class="normal">C√¥ng an ph∆∞·ªùng/x√£/th·ªã tr·∫•n</div>';

        // Th√¥ng tin ng∆∞·ªùi k√™ khai
        $html .= '<div class="title">TH√îNG TIN NG∆Ø·ªúI K√ä KHAI</div>';
        $html .= '<div class="info">1. H·ªç, ch·ªØ ƒë·ªám v√† t√™n:</div>';
        $html .= '<div class="normal">' . htmlspecialchars($booking->guest_full_name) . '</div>';
        $html .= '<div class="info">2. Ng√†y, th√°ng, nƒÉm sinh:</div>';
        $html .= '<div class="normal">' . htmlspecialchars($booking->guest_birth_date) . '</div>';
        $html .= '<div class="info">3. Gi·ªõi t√≠nh:</div>';
        $html .= '<div class="normal">' . htmlspecialchars($booking->guest_gender) . '</div>';
        $html .= '<div class="info">4. S·ªë ƒë·ªãnh danh c√° nh√¢n/CMND:</div>';
        $html .= '<div class="normal">' . htmlspecialchars($booking->guest_id_number) . '</div>';
        $html .= '<div class="info">5. S·ªë ƒëi·ªán tho·∫°i li√™n h·ªá:</div>';
        $html .= '<div class="normal">' . htmlspecialchars($booking->guest_phone) . '</div>';
        $html .= '<div class="info">6. Email:</div>';
        $html .= '<div class="normal">' . htmlspecialchars($booking->guest_email) . '</div>';
        $html .= '<div class="info">7. N∆°i th∆∞·ªùng tr√∫:</div>';
        $html .= '<div class="normal">' . htmlspecialchars($booking->guest_permanent_address) . '</div>';
        $html .= '<div class="info">8. N∆°i t·∫°m tr√∫:</div>';
        $html .= '<div class="normal">' . htmlspecialchars($booking->guest_current_address ?? 'N/A') . '</div>';
        $html .= '<div class="info">9. N∆°i ·ªü hi·ªán t·∫°i:</div>';
        $html .= '<div class="normal">' . htmlspecialchars($booking->hotel_name . ', ' . $booking->room_number) . '</div>';
        $html .= '<div class="info">10. Ngh·ªÅ nghi·ªáp, n∆°i l√†m vi·ªác:</div>';
        $html .= '<div class="normal">' . htmlspecialchars($booking->guest_occupation) . '</div>';
        $html .= '<div class="info">11. H·ªç, ch·ªØ ƒë·ªám v√† t√™n ch·ªß h·ªô:</div>';
        $html .= '<div class="normal">Nguy·ªÖn VƒÉn A</div>';
        $html .= '<div class="info">12. Quan h·ªá v·ªõi ch·ªß h·ªô:</div>';
        $html .= '<div class="normal">Kh√°ch l∆∞u tr√∫</div>';
        $html .= '<div class="info">13. S·ªë ƒë·ªãnh danh c√° nh√¢n/CMND c·ªßa ch·ªß h·ªô:</div>';
        $html .= '<div class="normal">012345678901</div>';

        // N·ªôi dung ƒë·ªÅ ngh·ªã
        $requestText = 'ƒêƒÉng k√Ω t·∫°m tr√∫ t·∫°i ' . htmlspecialchars($booking->hotel_name) . ' t·ª´ ng√†y ' . 
                      $checkInDate->format('d/m/Y') . ' ƒë·∫øn ng√†y ' . 
                      $checkOutDate->format('d/m/Y') . '.';
        
        $html .= '<div class="title">N·ªòI DUNG ƒê·ªÄ NGH·ªä</div>';
        $html .= '<div class="normal">' . $requestText . '</div>';
        $html .= '<div class="dotted-line"></div>';
        $html .= '<div class="dotted-line"></div>';
        $html .= '<div class="dotted-line"></div>';
        $html .= '<div class="dotted-line"></div>';

        // B·∫£ng th√†nh vi√™n gia ƒë√¨nh
        $html .= '<div class="title">15. NH·ªÆNG TH√ÄNH VI√äN TRONG H·ªò GIA ƒê√åNH C√ôNG THAY ƒê·ªîI</div>';
        $html .= '<table class="table">
            <thead>
                <tr>
                    <th>TT</th>
                    <th>H·ªç, ch·ªØ ƒë·ªám v√† t√™n</th>
                    <th>Ng√†y, th√°ng, nƒÉm sinh</th>
                    <th>Gi·ªõi t√≠nh</th>
                    <th>S·ªë ƒë·ªãnh danh c√° nh√¢n/CMND</th>
                    <th>Ngh·ªÅ nghi·ªáp, n∆°i l√†m vi·ªác</th>
                    <th>Quan h·ªá v·ªõi ng∆∞·ªùi c√≥ thay ƒë·ªïi</th>
                    <th>Quan h·ªá v·ªõi ch·ªß h·ªô</th>
                </tr>
            </thead>
            <tbody>';
        
        for ($i = 1; $i <= 5; $i++) {
            $html .= '
                <tr>
                    <td>' . $i . '</td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>';
        }
        
        $html .= '
            </tbody>
        </table>';

        // Ph·∫ßn ch·ªØ k√Ω
        $html .= '<table class="table" style="margin-top: 20px;">
            <tr>
                <td>
                    <div class="signature-section">
                        <div class="normal">.., ng√†y‚Ä¶. th√°ng ... nƒÉm ‚Ä¶</div>
                        <div class="info">√ù KI·∫æN C·ª¶A CH·ª¶ H·ªò(3)</div>
                        <div class="normal">(Ghi r√µ n·ªôi dung, k√Ω ghi r√µ h·ªç t√™n)</div>
                        <div class="signature-line"></div>
                        <div class="normal">Nguy·ªÖn VƒÉn A</div>
                        <div class="normal">Gi√°m ƒë·ªëc</div>
                    </div>
                </td>
                <td>
                    <div class="signature-section">
                        <div class="normal">.., ng√†y‚Ä¶. th√°ng ... nƒÉm ‚Ä¶</div>
                        <div class="info">√ù KI·∫æN C·ª¶A CH·ª¶ S·ªû H·ªÆU HO·∫∂C NG∆Ø·ªúI ƒê·∫†I DI·ªÜN CH·ªñ ·ªû H·ª¢P PH√ÅP(3)</div>
                        <div class="normal">(K√Ω, ghi r√µ h·ªç t√™n)</div>
                        <div class="signature-line"></div>
                        <div class="normal">Nguy·ªÖn VƒÉn A</div>
                        <div class="normal">Gi√°m ƒë·ªëc</div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="signature-section">
                        <div class="normal">.., ng√†y‚Ä¶. th√°ng ... nƒÉm ‚Ä¶</div>
                        <div class="info">√ù KI·∫æN C·ª¶A CHA, M·∫∏ HO·∫∂C NG∆Ø·ªúI GI√ÅM H·ªò(4)</div>
                        <div class="normal">(K√Ω, ghi r√µ h·ªç t√™n)</div>
                        <div class="signature-line"></div>
                        <div class="normal"></div>
                        <div class="normal"></div>
                    </div>
                </td>
                <td>
                    <div class="signature-section">
                        <div class="normal">.., ng√†y‚Ä¶. th√°ng ... nƒÉm ‚Ä¶</div>
                        <div class="info">NG∆Ø·ªúI K√ä KHAI</div>
                        <div class="normal">(K√Ω, ghi r√µ h·ªç t√™n)</div>
                        <div class="signature-line"></div>
                        <div class="normal">' . htmlspecialchars($booking->guest_full_name) . '</div>
                        <div class="normal">Kh√°ch l∆∞u tr√∫</div>
                    </div>
                </td>
            </tr>
        </table>';

        // Ch√∫ th√≠ch
        $html .= '<div class="footnotes">
            <div class="title">Ch√∫ th√≠ch:</div>
            <div class="footnote">(1) C∆° quan ƒëƒÉng k√Ω c∆∞ tr√∫</div>
            <div class="footnote">(2) Ghi r√µ r√†ng, c·ª• th·ªÉ n·ªôi dung ƒë·ªÅ ngh·ªã. V√≠ d·ª•: ƒëƒÉng k√Ω th∆∞·ªùng tr√∫; ƒëƒÉng k√Ω t·∫°m tr√∫; t√°ch h·ªô; x√°c nh·∫≠n th√¥ng tin v·ªÅ c∆∞ tr√∫...</div>
            <div class="footnote">(3) √Åp d·ª•ng ƒë·ªëi v·ªõi c√°c tr∆∞·ªùng h·ª£p quy ƒë·ªãnh t·∫°i kho·∫£n 2, kho·∫£n 3, kho·∫£n 4, kho·∫£n 5, kho·∫£n 6 ƒêi·ªÅu 20; kho·∫£n 1 ƒêi·ªÅu 25 Lu·∫≠t C∆∞ tr√∫</div>
            <div class="footnote">(4) √Åp d·ª•ng ƒë·ªëi v·ªõi tr∆∞·ªùng h·ª£p ng∆∞·ªùi ch∆∞a th√†nh ni√™n, ng∆∞·ªùi h·∫°n ch·∫ø h√†nh vi d√¢n s·ª±, ng∆∞·ªùi kh√¥ng ƒë·ªß nƒÉng l·ª±c h√†nh vi d√¢n s·ª± c√≥ thay ƒë·ªïi th√¥ng tin v·ªÅ c∆∞ tr√∫</div>
        </div>';

        $html .= '</body></html>';
        
        return $html;
    }
    
    /**
     * T·∫°o file PDF t·ª´ HTML b·∫±ng dompdf
     */
    private function createPdfFromHtml(string $html, string $outputPath, string $password): void
    {
        try {
            // T·∫°o PDF b·∫±ng dompdf v·ªõi c·∫•u h√¨nh ƒë∆°n gi·∫£n
            $pdf = Pdf::loadHTML($html);
            
            // C·∫•u h√¨nh PDF c∆° b·∫£n v·ªõi font Unicode
            $pdf->setPaper('A4', 'portrait');
            $pdf->setOptions([
                'isHtml5ParserEnabled' => true,
                'isRemoteEnabled' => false,
                'defaultFont' => 'DejaVu Sans',
                'chroot' => storage_path('app/public'),
                'tempDir' => storage_path('app/temp'),
                'enableFontSubsetting' => false,
                'pdfBackend' => 'CPDF',
                'defaultMediaType' => 'screen',
                'defaultPaperSize' => 'a4',
                'defaultPaperOrientation' => 'portrait',
                'dpi' => 96,
                'fontHeightRatio' => 0.9,
                'enableFontSubsetting' => false,
                'enableCssFloat' => true,
                'enableJavascript' => false,
                'enablePhp' => false,
                'enableRemoteFileAccess' => false,
                'fontCache' => storage_path('app/fonts'),
                'tempDir' => storage_path('app/temp'),
                'logOutputFile' => storage_path('logs/dompdf.log'),
                'defaultFont' => 'DejaVu Sans',
                'fontDir' => storage_path('app/fonts'),
                'fontCache' => storage_path('app/fonts'),
            ]);
            
            // L∆∞u file PDF
            $pdf->save($outputPath);
            
            // Ki·ªÉm tra file ƒë√£ ƒë∆∞·ª£c t·∫°o
            if (!file_exists($outputPath)) {
                throw new \Exception('PDF file was not created');
            }
            
            // Ki·ªÉm tra k√≠ch th∆∞·ªõc file
            $fileSize = filesize($outputPath);
            if ($fileSize < 1000) {
                throw new \Exception('PDF file is too small: ' . $fileSize . ' bytes');
            }
            
        } catch (\Exception $e) {
            Log::error('Error creating PDF with dompdf: ' . $e->getMessage());
            throw $e;
        }
    }

    /**
     * X√≥a file PDF c≈© c·ªßa booking
     *
     * @param string $bookingId
     * @return void
     */
    private function deleteOldPdfFiles(string $bookingId): void
    {
        try {
            $files = Storage::disk('public')->files('registrations');
            
            foreach ($files as $file) {
                // Ki·ªÉm tra xem file c√≥ ph·∫£i c·ªßa booking n√†y kh√¥ng v√† c√≥ ƒëu√¥i .pdf kh√¥ng
                if (strpos($file, 'registration_' . $bookingId . '_') !== false && 
                    strpos($file, '.pdf') !== false) {
                    
                    // X√≥a file c≈©
                    Storage::disk('public')->delete($file);
                    Log::info('Deleted old PDF file: ' . $file);
                }
            }
        } catch (\Exception $e) {
            Log::error('Error deleting old PDF files: ' . $e->getMessage());
        }
    }
} 